{
  "hash": "74a91b3bd45f57410d6142848addc474",
  "result": {
    "markdown": "---\ntitle: Text generation\ntitle-slide-attributes:\n  data-background-image: ../images/logo.png\n  data-background-size: contain\n  data-background-opacity: \"0.5\"\nlang: en\nsubtitle: with HuggingFace\nauthor: Jan Kirenz\nexecute:\n  eval: false\n  echo: true\nhighlight-style: github\nformat:\n  revealjs: \n    toc: true\n    toc-depth: 1\n    embed-resources: false\n    theme: [dark, ../custom.scss]  \n    incremental: true\n    transition: slide\n    background-transition: fade\n    transition-speed: slow\n    code-copy: true\n    code-line-numbers: true\n    smaller: false\n    scrollable: true\n    slide-number: c\n    preview-links: auto\n    chalkboard: \n      buttons: false\n   # logo: ../images/logo.png\n    footer: Jan Kirenz\n---\n\n# Text generation\n\n# Setup\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nfrom transformers import pipeline\n```\n:::\n\n\n# Intuition\n\n![](../image/text-generation.png)\n\n\n## Use Cases\n\n- Stories Generation\n\n- Code Generation: can help programmers in their repetitive coding tasks.\n\n## Task Variants\n\n- Completion Generation Models\n  - Given an incomplete sentence, complete it.\n  - Continue a story given the first sentences.\n  - Provided a code description, generate the code.\n\n- Text-to-Text Generation Models\n  - Translation\n  - Summarization\n  - Text classification\n\n- Inference\n  -  takes an incomplete text and returns multiple outputs with which the text can be completed.\n\n# Pipeline example \n\n## Create pipeline with GPT-2\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\ngenerator = pipeline('text-generation', model='gpt2')\n```\n:::\n\n\n## Provide text\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nmy_text = \"Hello, I study online media management\"\n```\n:::\n\n\n## Make inference\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\ngenerator(my_text, max_length=30, num_return_sequences=3)\n```\n:::\n\n\n## Output\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n[{'generated_text': 'Hello, I study online media management, and while most of my courses focus on the business, I specialize in online development.\\n\\nIf you know'},\n {'generated_text': 'Hello, I study online media management at a computer-focused high school. One of my favorite exercises is watching and reading my students write things.\\n'},\n {'generated_text': 'Hello, I study online media management, so I know that it\\'s not the best idea to be a part of the digital environment yourself.\"\\n\\n'}]\n```\n:::\n\n\n# What's next? {background-image=\"../images/logo.png\" background-opacity=\"0.5\"}\n\n**Congratulations! You have completed this tutorial** üëç\n\n**Next, you may want to go back to the [lab's website](https://kirenz.github.io/lab-huggingface/)**\n\n",
    "supporting": [
      "generation_files"
    ],
    "filters": [],
    "includes": {}
  }
}