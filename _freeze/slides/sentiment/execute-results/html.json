{
  "hash": "50249bb91528ab1ea274f764bb9a9803",
  "result": {
    "markdown": "---\ntitle: Sentiment Analyis\ntitle-slide-attributes:\n  data-background-image: ../images/logo.png\n  data-background-size: contain\n  data-background-opacity: \"0.5\"\nlang: en\nsubtitle: with Hugging Face Pipelines\nauthor: Jan Kirenz\nexecute:\n  eval: false\n  echo: true\nhighlight-style: github\nformat:\n  revealjs: \n    toc: true\n    toc-depth: 1\n    embed-resources: false\n    theme: [dark, ../custom.scss]  \n    incremental: true\n    transition: slide\n    background-transition: fade\n    transition-speed: slow\n    code-copy: true\n    code-line-numbers: true\n    smaller: false\n    scrollable: true\n    slide-number: c\n    preview-links: auto\n    chalkboard: \n      buttons: false\n   # logo: ../images/logo.png\n    footer: Jan Kirenz\n---\n\n# Sentimant Analysis with Hugging Face\n\n\n# Setup\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nfrom transformers import pipeline\n```\n:::\n\n\n# Intuition\n\n![](../images/text-classification.png)\n\n- Text classification: assigning a label or class to a given text\n\n- Sentiment analysis is the automated process of tagging data according to their sentiment:\n  - Positive, negative and neutral\n\n\n## Use Cases\n\n- Sentiment Analysis on Customer Reviews\n\n- You can track the sentiments of your customers from the product reviews using sentiment analysis models. \n\n- This can help understand churn and retention by grouping reviews by sentiment, to later analyze the text and make strategic decisions based on this knowledge.\n\n\n# Pipeline\n\n## Pipeline example with default model\n\n::: {.cell execution_count=2}\n``` {.python .cell-code code-line-numbers=\"|1|3|4|6\"}\nsentiment_pipeline = pipeline(\"sentiment-analysis\")\n\ndata = [\"I love you\",\n        \"I hate you\"]\n\nsentiment_pipeline(data)\n```\n:::\n\n\n- Output:\n\n. . . \n\n\n```{bash}\n[{'label': 'POSITIVE', 'score': 0.9998656511306763},\n {'label': 'NEGATIVE', 'score': 0.9991129040718079}]\n```\n\n\n\n## Pipeline example with specific model\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nspecific_model = pipeline(\n    model=\"finiteautomata/bertweet-base-sentiment-analysis\")\n```\n:::\n\n\n. . .\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nspecific_model(data)\n```\n:::\n\n\n- Output:\n\n. . . \n\n\n```{bash}\n[{'label': 'POS', 'score': 0.9916695356369019},\n {'label': 'NEG', 'score': 0.9806600213050842}]\n```\n\n\n# Available models\n\n- Sentiment analysis models on the [Hub](https://huggingface.co/models?pipeline_tag=text-classification&sort=downloads&search=sentiment)\n\n\n- *Twitter-roberta-base-sentiment* is a roBERTa model trained on ~58M tweets and fine-tuned \n\n- *Bert-base-multilingual-uncased-sentiment* is a model fine-tuned for sentiment analysis on product reviews in six languages: English, Dutch, German, French, Spanish and Italian.\n\n- *Distilbert-base-uncased-emotion* is a model fine-tuned for detecting emotions in texts, including sadness, joy, love, anger, fear and surprise.\n\n# Resources\n\n- [Federico Pascual (2022). Getting Started with Sentiment Analysis using Python. Hugging Face.](https://huggingface.co/blog/sentiment-analysis-python)\n\n- [Hugging Face documentation](https://huggingface.co/tasks/text-classification)\n\n\n# What's next? {background-image=\"../images/logo.png\" background-opacity=\"0.5\"}\n\n**Congratulations! You have completed this tutorial** üëç\n\n**Next, you may want to go back to the [lab's website](https://kirenz.github.io/lab-huggingface/)**\n\n",
    "supporting": [
      "sentiment_files"
    ],
    "filters": [],
    "includes": {}
  }
}